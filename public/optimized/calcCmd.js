define(["i18n!calculator.command","jquery"],function(a,b){var c={};return function(){var b={},d={},e={},f,g=[{regex:/\s+/,token:"whitespace"},{regex:/[a-zA-Z][a-zA-Z0-9_\.]*/,token:"variable"},{regex:/[0-9]*\.?[0-9]+/,token:"number"},{regex:/\+/,token:"add"},{regex:/\-/,token:"subtract"},{regex:/\*/,token:"multiply"},{regex:/\//,token:"divide"},{regex:/\(/,token:"open_paren"},{regex:/\)/,token:"close_paren"},{regex:/\,/,token:"comma"},{regex:/\^/,token:"power"},{regex:/\=/,token:"equals"}],h=function(a,b){var c=a.substring(b),d={};for(var e in g){var f=g[e],h=c.match(f.regex);if(h&&h[0]&&c.indexOf(h[0])==0)return d.token=f.token,d.value=h[0],d.newIndex=b+h[0].length,d}return null},i=function(a){var b=0,c=[];while(b<a.length){var d=h(a,b);if(!d)throw"unrecognized token at "+b;b=d.newIndex,c.push(d)}return c},j=0,k=function(a){var b=null;switch(a[j].token){case"number":b=a[j];break;case"subtract":if(a[j+1]&&a[j+1].token=="number")a[j+1].value="-"+a[j+1].value,j++,b=a[j];else throw"expecting a number at "+a[j].newIndex;break;case"variable":if(a[j+1]&&a[j+1].token=="open_paren"){b=a[j],b.token="method",b.arguments=[];var c="comma";j+=2,a[j].token=="close_paren"&&(c="close_paren",j++);while(c=="comma")b.arguments.push(m(a,["comma","close_paren"])),c=a[j].token,j++;j--;if(c!="close_paren")throw"expecting close parenthesis at "+a[j].newIndex}else b=a[j];break;case"open_paren":b=a[j],b.token="parenthesized_expression",j++,b.expression=m(a,["close_paren"])}if(!b){var d=a&&a[j]&&a[j].newIndex||0,e=a&&a[j]&&a[j].token||"nothing";throw"expecting a value at "+d+", got a "+e}return j++,b},l=function(a){switch(a[j].token){case"add":return a[j++];case"subtract":return a[j++];case"multiply":return a[j++];case"divide":return a[j++];case"power":return a[j++]}var b=a&&a[j]&&a[j].token||"value",c=a&&a[j]&&a[j].newIndex||0;throw"unexpected "+b+" at "+c},m=function(a,b){var c={token:"expression",newIndex:a[j].newIndex};c.expressionItems=[],c.expressionItems.push(k(a));if(j>a.length)return c;var d=!1;while(j<a.length&&!d){for(var e in b)a[j].token==b[e]&&(d=!0);d||(c.expressionItems.push(l(a)),c.expressionItems.push(k(a)))}return c},n=function(a){var b=[];for(var c in a)a[c].token!="whitespace"&&b.push(a[c]);a=b;var d=null;j=0;if(a[j].token=="variable"&&a.length>1&&a[j+1].token=="equals"){d={token:"variable_assignment",newIndex:a[j].newIndex},d.variable=a[j];if(a.length>2)j=2,d.assignmentExpression=m(a);else throw"Expecting value at "+a[j+1].newIndex}else d=m(a);return d},o=function(a){var b=a.expressionItems,c=[b[0]];for(var d=1;d<b.length;d+=2){var e=b[d];if(e.token=="power"){var f=c.pop(),g=b[d+1];c.push(p(Math.pow(q(f),q(g))))}else c.push(b[d]),c.push(b[d+1])}var h=[c[0]];for(var d=1;d<c.length;d+=2){var e=c[d];if(e.token=="multiply"){var f=h.pop(),g=c[d+1];h.push(p(q(f)*q(g)))}else if(e.token=="divide"){var f=h.pop(),g=c[d+1];h.push(p(q(f)/q(g)))}else h.push(c[d]),h.push(c[d+1])}var i=[h[0]];for(var d=1;d<h.length;d+=2){var e=h[d];if(e.token=="add"){var f=i.pop(),g=h[d+1];i.push(p(q(f)+q(g)))}else if(e.token=="subtract"){var f=i.pop(),g=h[d+1];i.push(p(q(f)-q(g)))}else i.push(h[d]),i.push(h[d+1])}if(i.length===0)throw"expressions should have at least one value";if(i.length>1)throw"unexpected modifier: "+i[1].token;return q(i[0])},p=function(a){return{token:"number",value:a,calculatedValue:a}},q=function(a){switch(a.token){case"number":return parseFloat(a.value);case"expression":return o(a);case"parenthesized_expression":return q(a.expression);case"variable_assignment":if(a.variable.value=="_")throw"the variable '_' is reserved";return e[a.variable.value]=q(a.assignmentExpression),e[a.variable.value];case"variable":if(a.value=="_")return f||0;var c=d&&d[a.value];c=c||e&&e[a.value];if(!c)throw"undefined variable "+a.value;return c;case"method":var g=[];for(var h in a.arguments){var c=q(a.arguments[h]);a.arguments[h].computedValue=c,g.push(c)}if(b[a.value])return b[a.value].apply(null,g);throw"unrecognized method "+a.value}throw"Unexpected token type: "+a.token};c.clearMemory=function(){e={},f=null};var r={};c.compute=function(a){var b={};return a=a.toString(),b.command=a,tree=r[a],tree?(b.syntax=tree.syntax,b.tree=tree.tree):(b.syntax=i(a),b.tree=n(b.syntax),r[a]=b),b.computedValue=q(b.tree),f=b.computedValue,b},c.computeValue=function(a){return c.compute(a).computedValue};var s=function(a){return!0};c.addFunction=function(a,c,d,e,f){return typeof a=="string"&&s(d)?(d.friendlyName=c,d.description=e,typeof f=="string"&&(f=[f]),d.examples=f,b[a]=d,!0):!1},c.addPredefinedVariable=function(a,b,c){b=parseFloat(b),typeof a=="string"&&(b||b==0)&&(d[a]=b)},c.functionDescription=function(c){return b[c]?b[c].description||a.t("no_description","No description found for the function, %{functionName}",{functionName:c}):a.t("unrecognized","%{functionName} is not a recognized function",{functionName:c})},c.functionExamples=function(a){return b[a]?b[a].examples||[]:[]},c.functionList=function(){var c=[];for(var d in b){var e=b[d];c.push([d,e.description||a.t("default_description","No description given")])}return c.sort(function(a,b){return a[0]>b[0]?1:a[0]<b[0]?-1:0}),c}}(),function(){var b=function(a,b,d){c.addPredefinedVariable(a,b,d)},d=function(a,b,d,e,f){c.addFunction(a,b,d,e,f)};b("pi",Math.PI),b("e",Math.exp(1)),d("abs",a.t("abs.name","abs"),function(a){return Math.abs(a)},a.t("abs.description","Returns the absolute value of the given value"),"abs(x)"),d("asin",a.t("asin.name","asin"),function(a){return Math.asin(a)},a.t("asin.description","Returns the arcsin of the given value"),"asin(x)"),d("acos",a.t("acos.name","acos"),function(a){return Math.acos(a)},a.t("acos.description","Returns the arccos of the given value"),"acos(x)"),d("atan",a.t("atan.name","atan"),function(a){return Math.atan(a)},a.t("atan.description","Returns the arctan of the given value"),"atan(x)"),d("log",a.t("log.name","log"),function(a,b){return Math.log(a)/Math.log(b||10)},a.t("log.description","Returns the log of the given value with an optional base"),"log(x, [base])"),d("ln",a.t("ln.name","ln"),function(a){return Math.log(a)},a.t("ln.description","Returns the natural log of the given value"),"ln(x)"),d("rad_to_deg",a.t("rad_to_deg.name","rad_to_deg"),function(a){return a*180/Math.PI},a.t("rad_to_deg.description","Returns the given value converted from radians to degrees"),"rad_to_deg(radians)"),d("deg_to_rad",a.t("deg_to_rad.name","deg_to_rad"),function(a){return a*Math.PI/180},a.t("deg_to_rad.description","Returns the given value converted from degrees to radians"),"deg_to_rad(degrees)"),d("sin",a.t("sin.name","sin"),function(a){return Math.sin(a)},a.t("sin.description","Returns the sine of the given value"),"sin(radians)"),d("cos",a.t("cos.name","cos"),function(a){return Math.cos(a)},a.t("cos.description","Returns the cosine of the given value"),"cos(radians)"),d("tan",a.t("tan.name","tan"),function(a){return Math.tan(a)},a.t("tan.description","Returns the tangent of the given value"),"tan(radians)"),d("pi",a.t("pi.name","pi"),function(a){return Math.PI},a.t("pi.description","Returns the computed value of pi"),"pi()"),d("if",a.t("if.name","if"),function(a,b,c){return a?b:c},a.t("if.description","Evaluates the first argument, returns the second argument if it evaluates to a non-zero value, otherwise returns the third value"),"if(bool,success,fail)");var e=function(a){return a.length==1&&a[0]instanceof Array?a[0]:a};d("max",a.t("max.name","max"),function(){var a=e(arguments),b=a[0];for(var c=0;c<a.length;c++)b=Math.max(b,a[c]);return b},a.t("max.description","Returns the highest value in the list"),["max(a,b,c...)","max(list)"]),d("min",a.t("min.name","min"),function(){var a=e(arguments),b=a[0];for(var c=0;c<a.length;c++)b=Math.min(b,a[c]);return b},a.t("min.description","Returns the lowest value in the list"),["min(a,b,c...)","min(list)"]),d("sqrt",a.t("sqrt.name","sqrt"),function(a){return Math.sqrt(a)},a.t("sqrt.description","Returns the square root of the given value"),"sqrt(x)"),d("sort",a.t("sort.name","sort"),function(a){var b=e(arguments),c=[];for(var d=0;d<b.length;d++)c.push(b[d]);return c.sort()},a.t("sort.description","Returns the list of values, sorted from lowest to highest"),["sort(a,b,c...)","sort(list)"]),d("reverse",a.t("reverse.name","reverse"),function(a){var b=e(arguments),c=[];for(var d=0;d<b.length;d++)c.unshift(b[d]);return c},a.t("reverse.description","Reverses the order of the list of values"),["reverse(a,b,c...)","reverse(list)"]),d("first",a.t("first.name","first"),function(){return e(arguments)[0]},a.t("first.description","Returns the first value in the list"),["first(a,b,c...)","first(list)"]),d("last",a.t("last.name","last"),function(){var a=e(arguments);return a[a.length-1]},a.t("last.description","Returns the last value in the list"),["last(a,b,c...)","last(list)"]),d("at",a.t("at.name","at"),function(a,b){return a[b]},a.t("at.description","Returns the indexed value in the given list"),"at(list,index)"),d("rand",a.t("rand.name","rand"),function(a){return Math.random()*(a||1)},a.t("rand.description","Returns a random number between zero and the range specified, or one if no number is given"),"rand(x)"),d("length",a.t("length.name","length"),function(){return e(arguments).length},a.t("length.description","Returns the number of arguments in the given list"),["length(a,b,c...)","length(list)"]);var f=function(a){var b=0;for(var c=0;c<a.length;c++)a[c]&&(b+=a[c]);return b};d("mean",a.t("mean.name","mean"),function(){var a=e(arguments);return f(a)/a.length},a.t("mean.description","Returns the average mean of the values in the list"),["mean(a,b,c...)","mean(list)"]),d("median",a.t("median.name","median"),function(){var a=e(arguments),b=[];for(var c=0;c<a.length;c++)b.push(a[c]);var b=b.sort();return b.length%2==1?b[Math.floor(b.length/2)]:(b[Math.round(b.length/2)]+b[Math.round(b.length/2)-1])/2},a.t("median.description","Returns the median for the list of values"),["median(a,b,c...)","median(list)"]),d("range",a.t("range.name","range"),function(){var a=e(arguments),b=[];for(var c=0;c<a.length;c++)b.push(a[c]);var b=b.sort();return b[b.length-1]-b[0]},a.t("range.description","Returns the range for the list of values"),["range(a,b,c...)","range(list)"]),d("count",a.t("count.name","count"),function(){return e(arguments).length},a.t("count.description","Returns the number of items in the list"),["count(a,b,c...)","count(list)"]),d("sum",a.t("sum.name","sum"),function(){return f(e(arguments))},a.t("sum.description","Returns the sum of the list of values"),["sum(a,b,c...)","sum(list)"]);var g={},h=function(a){return a=Math.max(parseInt(a),0),a==0||a==1?1:a>170?Infinity:g[a]?g[a]:a*h(a-1)};d("fact",a.t("fact.name","fact"),function(a){return h(a)},a.t("fact.description","Returns the factorial of the given number"),"fact(n)"),d("perm",a.t("perm.name","perm"),function(a,b){return h(a)/h(a-b)},a.t("perm.description","Returns the permutation result for the given values"),"perm(n, k)"),d("comb",a.t("comb.name","comb"),function(a,b){return h(a)/(h(b)*h(a-b))},a.t("comb.description","Returns the combination result for the given values"),"comb(n, k)"),d("ceil",a.t("ceil.name","ceil"),function(a){return Math.ceil(a)},a.t("ceil.description","Returns the ceiling for the given value"),"ceil(x)"),d("floor",a.t("floor.name","floor"),function(a){return Math.floor(a)},a.t("floor.description","Returns the floor for the given value"),"floor(x)"),d("round",a.t("round.name","round"),function(a){return Math.round(a)},a.t("round.description","Returns the given value rounded to the nearest whole number"),"round(x)"),d("e",a.t("e.name","e"),function(a){return Math.exp(a||1)},a.t("e.description","Returns the value for e"),"e()")}(),c})